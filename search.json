[{"path":"https://atsyplenkov.github.io/rusleR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Anatoly Tsyplenkov Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anatoly Tsyplenkov. Maintainer, author.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tsyplenkov (2022). rusleR: Universal Soil Loss Equation Estimation. R package version 0.0.1, https://atsyplenkov.github.io/rusleR/.","code":"@Manual{,   title = {rusleR: Universal Soil Loss Equation Estimation},   author = {Anatoly Tsyplenkov},   year = {2022},   note = {R package version 0.0.1},   url = {https://atsyplenkov.github.io/rusleR/}, }"},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"rusler-","dir":"","previous_headings":"","what":"Universal Soil Loss Equation Estimation","title":"Universal Soil Loss Equation Estimation","text":"package offers R implementation Universal Soil Loss Equation (USLE). can find collection functions estimate main factors: R-factor, K-factor, LS-factor C-factor. package usesterra Rsagacmd background. SAGA GIS needs install machine well.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Universal Soil Loss Equation Estimation","text":"can install development version rusleR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"atsyplenkov/rusleR\")"},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Universal Soil Loss Equation Estimation","text":"","code":"library(rusleR) ## basic example code"},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"ls-factor","dir":"","previous_headings":"Example","what":"LS-factor","title":"Universal Soil Loss Equation Estimation","text":"basic example shows calculate LS_alpine (Schmidt et al., 2019): result ls_alpine() receive SpatRaster object:","code":"library(Rsagacmd) library(terra)  # initiate a saga object saga <- saga_gis(raster_backend = \"terra\")  # load DEM f <- system.file(\"extdata/dem.tif\", package=\"rusleR\") DEM <- rast(f)  # calculate LS-alpine ls <- ls_alpine(dem = DEM) ls #> class       : SpatRaster  #> dimensions  : 78, 54, 1  (nrow, ncol, nlyr) #> resolution  : 27.30756, 27.30756  (x, y) #> extent      : 337615.4, 339090, 4814626, 4816756  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / UTM zone 38N (EPSG:32638)  #> source      : memory  #> name        : LSalpine  #> min value   :        0  #> max value   : 114.6034"},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"r-factor","dir":"","previous_headings":"Example","what":"R-factor","title":"Universal Soil Loss Equation Estimation","text":"help get_glored() function can quickly download crop AOI Global Rainfall Erosivity Database map (GLORED). created Panagos et al. (2017) based -situ measurements 3,625 stations. GLORED used develop global erosivity map 30 arc-seconds(~1 km) based Gaussian Process Regression(GPR). result get_glored() receive SpatRaster object:","code":"library(terra)  f <- system.file(\"extdata/extent.shp\", package=\"rusleR\") v <- vect(f)  r_factor <- get_glored(v) r_factor #> class       : SpatRaster  #> dimensions  : 2, 2, 1  (nrow, ncol, nlyr) #> resolution  : 809.8197, 809.8197  (x, y) #> extent      : 337544.9, 339164.5, 4814761, 4816381  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=utm +zone=38 +datum=WGS84 +units=m +no_defs  #> source      : memory  #> name        :      out  #> min value   : 682.1308  #> max value   : 820.8951"},{"path":"https://atsyplenkov.github.io/rusleR/index.html","id":"to-add","dir":"","previous_headings":"","what":"To add","title":"Universal Soil Loss Equation Estimation","text":"K-factor functions C-factor???","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/aggregate_soilgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate SoilGrids rasters — aggregate_soilgrids","title":"Aggregate SoilGrids rasters — aggregate_soilgrids","text":"allows transform aggregate SoilGrids rasters. .e. SoilGrids one download several layers (0-5, 5-15, 15-30, etc.). function take average among convert conventional units (see SoilGrids FAQ)","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/aggregate_soilgrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate SoilGrids rasters — aggregate_soilgrids","text":"","code":"aggregate_soilgrids(r)"},{"path":"https://atsyplenkov.github.io/rusleR/reference/aggregate_soilgrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate SoilGrids rasters — aggregate_soilgrids","text":"r SpatRaster, single/multiple layer soil characteristics. Outcome get_soilgrids() function.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/aggregate_soilgrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate SoilGrids rasters — aggregate_soilgrids","text":"SpatRaster","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/aggregate_soilgrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate SoilGrids rasters — aggregate_soilgrids","text":"","code":"library(purrr)  f <- system.file(\"extdata/extent.shp\", package=\"rusleR\") v <- vect(f)  sand <- get_soilgrids(v, layer = \"sand\") #> Downloading Sand rasters... sand #> class       : SpatRaster  #> dimensions  : 10, 8, 3  (nrow, ncol, nlyr) #> resolution  : 239.5216, 239.5216  (x, y) #> extent      : 337313, 339229.2, 4814440, 4816835  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=utm +zone=38 +datum=WGS84 +units=m +no_defs  #> source      : memory  #> names       : sand_0-5cm_mean, sand_5-15cm_mean, sand_15-30cm_mean  #> min values  :             286,              293,               288  #> max values  :             314,              319,               318   sand_agg <- aggregate_soilgrids(sand) sand_agg #> class       : SpatRaster  #> dimensions  : 10, 8, 1  (nrow, ncol, nlyr) #> resolution  : 239.5216, 239.5216  (x, y) #> extent      : 337313, 339229.2, 4814440, 4816835  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=utm +zone=38 +datum=WGS84 +units=m +no_defs  #> source      : memory  #> name        : sand  #> min value   : 28.9  #> max value   : 31.7"},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Global Rainfall Erosivity — get_glored","title":"Download Global Rainfall Erosivity — get_glored","text":"function download Global Rainfall Erosivity Database (GLORED) created Panagos et al. (2017) crop shapefile boundaries.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Global Rainfall Erosivity — get_glored","text":"","code":"get_glored(aoi, warp = TRUE)"},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Global Rainfall Erosivity — get_glored","text":"aoi SpatVector. polygon layer area interest. warp logical. TRUE, reproject GLORED raster aoi projection","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Global Rainfall Erosivity — get_glored","text":"SpatRaster","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download Global Rainfall Erosivity — get_glored","text":"Panagos, Panos, Pasquale Borrelli, Katrin Meusburger, Bofu Yu, Andreas Klik, Kyoung Jae Lim, Jae E. Yang, et al. “Global Rainfall Erosivity Assessment Based High-Temporal Resolution Rainfall Records.” Scientific Reports 7, . 1 (June 23, 2017): 4175. https://doi.org/10.1038/s41598-017-04282-8.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_glored.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Global Rainfall Erosivity — get_glored","text":"","code":"library(terra)  f <- system.file(\"extdata/extent.shp\", package=\"rusleR\") v <- vect(f)  r_factor <- get_glored(v)  plot(r_factor)"},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_soilgrids.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SoilGrids layers — get_soilgrids","title":"Download SoilGrids layers — get_soilgrids","text":"Download SoilGrids layers","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_soilgrids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SoilGrids layers — get_soilgrids","text":"","code":"get_soilgrids(aoi, layer = c(\"all\", \"sand\", \"silt\", \"clay\", \"soc\", \"phh2o\"))"},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_soilgrids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SoilGrids layers — get_soilgrids","text":"aoi SpatVector. polygon layer area interest. layer character. string indicating layers downloaded. Either one following: '', 'sand', 'clay', 'silt', 'soc' 'phh2o'","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_soilgrids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SoilGrids layers — get_soilgrids","text":"SpatRaster","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/get_soilgrids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SoilGrids layers — get_soilgrids","text":"","code":"library(terra) library(purrr)  f <- system.file(\"extdata/extent.shp\", package=\"rusleR\") v <- vect(f)  sand <- get_soilgrids(v, layer = \"sand\") #> Downloading Sand rasters...  plot(sand)"},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate K-factor — k_factor","title":"Calculate K-factor — k_factor","text":"Calculate K-factor","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate K-factor — k_factor","text":"","code":"k_factor(sand, silt, clay, soc, method = c(\"williams1983\"))"},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate K-factor — k_factor","text":"sand SpatRaster. Single layer raster sand proportion (%). Outcome aggregate_soilgrids() silt SpatRaster. Single layer raster silt proportion (%). Outcome aggregate_soilgrids() clay SpatRaster. Single layer raster clay proportion (%). Outcome aggregate_soilgrids() soc SpatRaster. Single layer raster weight percentage organic carbon (%). Outcome aggregate_soilgrids() method string. One options: 'williams1983' (see Details)","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate K-factor — k_factor","text":"SpatRaster","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate K-factor — k_factor","text":"Currently, function supports following equations: 'williams1983' -- equation Williams Renard (1983) cited Chen et al. (2011)","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate K-factor — k_factor","text":"Williams, J. R., K. G. Renard, P. T. Dyke. “EPIC: New Method Assessing Erosion’s Effect Soil Productivity.” Journal Soil Water Conservation 38, . 5 (September 1, 1983): 381–83. Chen, Liangang, Xin Qian, Yong Shi. “Critical Area Identification Potential Soil Loss Typical Watershed Three Gorges Reservoir Region.” Water Resources Management 25, . 13 (June 25, 2011): 3445. https://doi.org/10.1007/s11269-011-9864-4.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/k_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate K-factor — k_factor","text":"","code":"library(purrr)  f <- system.file(\"extdata/extent.shp\", package=\"rusleR\") v <- vect(f)  sand <- get_soilgrids(v, layer = \"sand\") #> Downloading Sand rasters... silt <- get_soilgrids(v, layer = \"silt\") #> Downloading Silt rasters... clay <- get_soilgrids(v, layer = \"clay\") #> Downloading Clay rasters... soc <- get_soilgrids(v, layer = \"soc\") #> Downloading SOC rasters...  sand_mean <- aggregate_soilgrids(sand) silt_mean <- aggregate_soilgrids(silt) clay_mean <- aggregate_soilgrids(clay) soc_mean <- aggregate_soilgrids(soc)  k <- k_factor(sand_mean, silt_mean, clay_mean, soc_mean) k #> class       : SpatRaster  #> dimensions  : 10, 8, 1  (nrow, ncol, nlyr) #> resolution  : 239.5216, 239.5216  (x, y) #> extent      : 337313, 339229.2, 4814440, 4816835  (xmin, xmax, ymin, ymax) #> coord. ref. : +proj=utm +zone=38 +datum=WGS84 +units=m +no_defs  #> source      : memory  #> name        : K_williams1983  #> min value   :     0.06520302  #> max value   :     0.06743016"},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":null,"dir":"Reference","previous_headings":"","what":"ls_alpine — ls_alpine","title":"ls_alpine — ls_alpine","text":"function calculates LS-factor Universal Soil Loss Equation (USLE), described Schmidt et al. (2019).","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ls_alpine — ls_alpine","text":"","code":"ls_alpine(dem, threshold = 120, saga_obj = saga)"},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ls_alpine — ls_alpine","text":"dem SpatRaster, single layer elevation values. Values unit map units, meters crs longitude/latitude threshold numeric/double, specifying flow threshold meters. Default 120 m saga_obj SAGA-GIS geoprocessor object. Run Rsagacmd::saga_gis(raster_backend = \"terra\")","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ls_alpine — ls_alpine","text":"SpatRaster","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ls_alpine — ls_alpine","text":"Schmidt, Simon, Simon Tresch, Katrin Meusburger. “Modification RUSLE Slope Length Steepness Factor (LS-Factor) Based Rainfall Experiments Steep Alpine Grasslands.” MethodsX 6 (2019): 219–29. https://doi.org/10.1016/j.mex.2019.01.004.","code":""},{"path":"https://atsyplenkov.github.io/rusleR/reference/ls_alpine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ls_alpine — ls_alpine","text":"","code":"if (FALSE) { library(Rsagacmd)  # initiate a saga object saga <- saga_gis(raster_backend = \"terra\")  # load DEM f <- system.file(\"extdata/dem.tif\", package=\"rusleR\") DEM <- rast(f)  # calculate LS-alpine ls <- ls_alpine(dem = DEM)  plot(ls) }"},{"path":"https://atsyplenkov.github.io/rusleR/news/index.html","id":"rusler-001","dir":"Changelog","previous_headings":"","what":"rusleR 0.0.1","title":"rusleR 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
